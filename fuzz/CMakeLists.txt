cmake_minimum_required(VERSION 3.0.2)

include_directories(../include)
include_directories(./hacl)

set(CMAKE_C_COMPILER clang)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=fuzzer,address")
find_package(GMP QUIET)

add_custom_target(fuzz)
set_target_properties(fuzz PROPERTIES EXCLUDE_FROM_ALL true)

add_custom_target(fuzz_hacl)
add_dependencies(fuzz fuzz_hacl)
file(GLOB FUZZ_HACL_SOURCES ./hacl_*.c)
foreach (file ${FUZZ_HACL_SOURCES})
	get_filename_component(tmp_name ${file} NAME_WE)
	add_executable(fuzz_${tmp_name} EXCLUDE_FROM_ALL ${file} ./hacl/Hacl_Curve25519.c)
	target_link_libraries(fuzz_${tmp_name} ${TARGET})
	add_dependencies(fuzz_hacl fuzz_${tmp_name})
endforeach (file ${FUZZ_HACL_SOURCES})

file(GLOB FUZZ_GMP_OPER ./op*.c)
foreach (fp 25519;448)
  add_custom_target(fuzz${fp})
  add_dependencies(fuzz fuzz${fp})
  foreach (op_file ${FUZZ_GMP_OPER})
	get_filename_component(op ${op_file} NAME_WE)
 	set(fileName fuzz${fp}_${op})
    add_executable(${fileName} EXCLUDE_FROM_ALL ${op_file})
 	target_compile_definitions(${fileName} PRIVATE "FIELD=${fp}")
    target_link_libraries(${fileName} ${TARGET} gmp)
 	add_dependencies(fuzz${fp} ${fileName})
  endforeach (op_file ${FUZZ_GMP_OPER})
endforeach (fp ${FUZZ_GMP_FP})
